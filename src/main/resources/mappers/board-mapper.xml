<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">
  
   <resultMap type="boardType" id="boardType_rm">
      <id property="boardCode" column="BOARD_CD" />
      <result property ="boardName" column="BOARD_NAME"/>
   </resultMap>
   <resultMap type="board" id = "board_rm">
      <id property="boardId" column="BOARD_ID" />
      <result property="boardCode" column="BOARD_CD" />
      <result property="boardTitle" column="BOARD_TITLE" />
      <result property="boardContent" column="BOARD_CONTENT" />
      <result property="boardFiles" column="BOARD_FILE1" />
      <result property="boardFile2" column="BOARD_FILE2" />
      <result property="boardDt" column="BOARD_DT" />
      <result property="memberNick" column="MEMBER_NICK" />
      <result property="boardCNT" column="READ_CNT" />
      <result property="boardAuth" column="BOARD_AUTH" />
      <result property="memberId" column="MEMBER_ID" />      
   </resultMap>
   
   <resultMap type="message" id = "message_rm">
      <id property="messageId" column="MESSAGE_ID" />
      <result property="senderId" column="SENDER_ID" />
      <result property="receiverId" column="RECEIVER_ID" />
      <result property="messageTitle" column="MESSAGE_TITLE" />
      <result property="messageContent" column="MESSAGE_CONTENT" />
      <result property="messageDt" column="MESSAGE_DT" />
      <result property="messageOpen" column="MESSAGE_OPEN" />
      <result property="messageSt" column="MESSAGE_ST" />
            
   </resultMap>
   
   <resultMap type = "boarddetail" id = "boardDetail_rm">
      <id property = "boardId" column = "BOARD_ID"/>
      <result property = "boardTitle" column = "BOARD_TITLE"/>
      <result property = "boardContent" column = "BOARD_CONTENT"/>
      <result property = "createDate" column = "BOARD_DT"/>
      <result property = "updateDate" column = "BOARD_UPDT"/>
      <result property = "readCount" column = "READ_CNT"/>
      <result property = "memberNickname" column = "MEMBER_NICK"/>
      <result property = "profileImage" column = "BOARD_FILE1"/>
      <result property = "boardThumbNail" column = "BOARD_FILE2"/>
      <result property = "memberId" column = "MEMBER_ID"/>
      <result property = "boardCode" column = "BOARD_CD"/>
      <result property = "boardGood" column = "BOARD_GOOD"/>
      <!-- selectImageList란 select가 들어간 imagelist를 select하는 것. -->
      <collection property = "imageList" column = "BOARD_ID" javaType = "java.util.ArrayList" ofType="boardImage" select="selectImageList"/>
   </resultMap>
   
   
   <!-- 이미지 정보 조회용 resultMap -->
   <resultMap type="boardImage" id="boardImage_rm">
      <id property="imageNo" column="IMG_NO" />
      <result property="imageReName" column="IMG_RENAME" />
      <result property="imageOriginal" column="IMG_ORIGINAL" />
      <result property="imageLevel" column="IMG_LEVEL" />
      <result property="boardId" column="BOARD_ID" />
      <result property ="image_ST" column = "IMAGE_ST"/>
   </resultMap>
   
   <resultMap type = "boardGood" id = "boardGood_rm">
   <id property = "boardGoodId" column = "BOARDGOOD_ID"/>
   <result property = "boardCode" column = "BOARD_CODE" />
   <result property = "boardId" column = "BOARD_ID" />
   <result property = "memberId" column = "MEMBER_ID" />
   </resultMap>
   <resultMap type = "report" id = "report_rm">
   	<id property = "reportId" column = "REPORT_ID"/>
   	<result property = "reportTargetTitle" column="REPORT_TARGET_TITLE"/>
   	<result property = "reportTargetContent" column="REPORT_TARGET_CONTENT"/>
   	<result property = "reportContent" column="REPORT_CONTENT"/>
   	<result property = "reportTarget" column="REPORT_TARGET"/>
   	<result property = "reportSendId" column="REPORT_SEND_ID"/>
   	<result property = "reportSendNick" column="REPORT_SEND_NICK"/>
   	<result property = "reportTargetType" column="REPORT_TARGET_TYPE"/>
   	<result property = "reportTargetNick" column="REPORT_TARGET_NICK"/>
   	<result property = "reportStatus" column="REPORT_STATUS"/>
   	 
   </resultMap>
   
   <resultMap type = "follow" id = "follow_rm">
   		<id property ="followId" column = "FOLLOW_ID"/>
   		<result property = "writerId" column = "WRITER_ID"/>
   		<result property = "writerNick" column = "WRITER_NICK"/>
   		<result property = "followerId" column = "FOLLOWER_ID"/>
   		<result property = "followerNick" column = "FOLLOWER_NICK"/>
   </resultMap>
   
   <!-- 특정 게시글 이미지 목록 조회 -->
   <select id="selectImageList" resultMap="boardImage_rm">
      SELECT * FROM BOARD_IMG
      WHERE BOARD_ID = #{boardId}
      AND IMAGE_ST = 'N'
      ORDER BY IMG_LEVEL
   </select>
   
   
   <select id = "selectBoardType" resultMap = "boardType_rm">
      SELECT BOARD_CD,BOARD_NAME
      FROM BOARD_TYPE
   </select>
   <select id = "getListCount" resultType="_int">
      SELECT count(*) 
      FROM board
      WHERE BOARD_CD = #{boardCode}
      AND BOARD_ST = 'N'
   </select>
   <select id="selectBoardList" resultMap="board_rm">
      SELECT BOARD_ID,
      BOARD_CD,
      BOARD_TITLE,
      READ_CNT,
      BOARD_CONTENT,
      CASE WHEN SYSDATE - BOARD_DT &lt; 1
          THEN TO_CHAR(BOARD_DT, 'HH:MI')
          ELSE TO_CHAR(BOARD_DT, 'YYYY-MM-DD')
      END BOARD_DT,
      (SELECT IMG_RENAME FROM BOARD_IMG
       WHERE BOARD.BOARD_ID = BOARD_IMG.BOARD_ID
       AND IMG_LEVEL = 0 AND IMAGE_ST = 'N') BOARD_FILE1,
       (SELECT IMG_RENAME FROM BOARD_IMG
       WHERE BOARD.BOARD_ID = BOARD_IMG.BOARD_ID
       AND IMG_LEVEL = 0 AND IMAGE_ST = 'N') BOARD_FILE2,  
      BOARD_AUTH,
      MEMBER_ID
   FROM BOARD
   JOIN BOARD_TYPE USING(BOARD_CD)
   JOIN MEMBER USING(MEMBER_ID)
   WHERE BOARD_ST = 'N'
   AND BOARD_CD = #{boardCode}
   ORDER BY BOARD_ID DESC
      
   </select>
   
   <select id = "selectBoardDetail" parameterType ="_int" resultMap = "boardDetail_rm">
   	  SELECT b.BOARD_ID, b.BOARD_TITLE, b.BOARD_CONTENT,
      TO_CHAR(b.BOARD_DT, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') AS BOARD_DT,
      TO_CHAR(b.BOARD_UPDT, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') AS BOARD_UPDT,
   	  b.READ_CNT, b.MEMBER_NICK, b.MEMBER_ID, b.BOARD_FILE1, b.BOARD_FILE2
	  FROM BOARD b 
	  JOIN MEMBER m ON b.MEMBER_ID = m.MEMBER_ID
	  JOIN BOARD_TYPE t ON b.BOARD_CD  = t.BOARD_CD 
	  WHERE BOARD_ID = #{boardId}
	  AND BOARD_ST = 'N'
   </select>
   
    
   <select id = "selectWriterBoardList" resultMap = "board_rm">
		SELECT BOARD_ID, BOARD_CD, BOARD_TITLE, BOARD_CONTENT, BOARD_FILE1, BOARD_FILE2,TO_CHAR(BOARD_DT, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_DT,
		READ_CNT, BOARD_AUTH, MEMBER_ID
		FROM BOARD
		WHERE MEMBER_ID = #{memberId}
   </select>
   
   <insert id = "sendLetter" parameterType="message">
   		INSERT INTO MESSAGE (MESSAGE_ID, SENDER_ID, RECEIVER_ID, MESSAGE_TITLE, MESSAGE_CONTENT, MESSAGE_DT)
SELECT
    SEQ_MESSAGE_NO.NEXTVAL,
    #{senderId},
    #{receiverId},
    #{messageTitle},
    #{messageContent},
    SYSDATE
FROM
    dual
   </insert>
   <insert id="insertImage" parameterType="map" useGeneratedKeys = "true">
  <selectKey keyProperty ="boardId" resultType ="_int" order ="BEFORE">
	SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
	</selectKey>
  INSERT INTO BOARD_IMG (IMG_ID, IMG_RENAME, IMG_ORIGINAL, IMAGE_LEVEL, BOARD_ID,IMAGE_ST)
  VALUES
  <foreach collection="profileImage" item="image" separator=",">
    (SEQ_IMG_NO, #{image.imageReName}, #{image.imageOriginal}, #{image.imageLevel}, #{boardId},'N')
  </foreach>
</insert>


	<insert id = "writeBoard" parameterType = "detail" useGeneratedKeys = "true">
	<selectKey keyProperty ="boardId" resultType ="_int" order ="BEFORE">
	SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
	</selectKey>
	INSERT INTO BOARD(BOARD_ID, BOARD_CD,BOARD_TITLE,BOARD_CONTENT,BOARD_FILE1,BOARD_FILE2,BOARD_DT,READ_CNT,MEMBER_ID,BOARD_ST,MEMBER_NICK,BOARD_AUTH) 
	VALUES(#{boardId},#{boardCode},#{boardTitle},#{boardContent},#{profileImage},#{boardThumbNail},SYSDATE,0,#{memberId},'N',#{memberNickname},'N')
	</insert>
	
	<!-- 여기 봐야함. -->
	<update id = "updateBoard" parameterType = "detail">
	UPDATE BOARD 
	SET BOARD_TITLE = #{boardTitle}, BOARD_CONTENT = #{boardContent}, BOARD_FILE1 = #{profileImage},BOARD_FILE2 = #{boardThumbNail}
	WHERE BOARD_ID = #{boardId}
	</update>
	
	<insert id="insertBoardImage" parameterType="detail" useGeneratedKeys="true">
    <selectKey keyProperty="boardId" resultType="int" order="BEFORE">
        SELECT BOARD_ID
        FROM (
            SELECT BOARD_ID
            FROM BOARD
            WHERE MEMBER_ID = #{memberId}
            ORDER BY BOARD_DT DESC
        )
        WHERE ROWNUM = 1
    </selectKey>
    INSERT INTO BOARD_IMG
    SELECT SEQ_BOARD_IMG_NO.NEXTVAL AS IMG_ID, A.* FROM (
        <foreach collection="imageList" item="image" separator="UNION ALL">
            SELECT #{image.imageReName} AS IMG_RENAME, #{image.imageOriginal} AS IMG_ORIGINAL, #{image.imageLevel} AS IMG_LEVEL, #{boardId} AS BOARD_ID, 'N' AS IMAGE_ST
            FROM DUAL
        </foreach>
    ) A
</insert>
	
	
	<insert id = "updateBoardImage" parameterType="detail">
		
    	 INSERT INTO BOARD_IMG
    SELECT SEQ_BOARD_IMG_NO.NEXTVAL AS IMG_ID, A.* FROM (
        <foreach collection="imageList" item="image" separator="UNION ALL">
            SELECT #{image.imageReName} AS IMG_RENAME, #{image.imageOriginal} AS IMG_ORIGINAL, #{image.imageLevel} AS IMG_LEVEL, #{boardId} AS BOARD_ID, 'N' AS IMAGE_ST
            FROM DUAL
        </foreach>
    ) A
   	</insert>
	
	
	<update id = "deleteBeforeImage">
	UPDATE BOARD_IMG
	SET IMAGE_ST = 'Y'
	WHERE BOARD_ID=#{boardId}
	</update>
	
	
	<!-- ******************************* 관리자 게시물 ******************************** -->
	
	<!-- 관리자 게시판 페이지네이션 -->	
	<select id="getAdminListCount" resultType="int">
	   SELECT count(*) 
	   FROM board 
	</select>
	
	<!-- 관리자 게시판 화면 출력 -->	
<select id="selectAdminBoardList" resultMap="board_rm">
    SELECT b.BOARD_ID,
           b.BOARD_TITLE,
           b.READ_CNT,
           b.BOARD_CONTENT,
           b.BOARD_FILE1,
           b.BOARD_FILE2,
           b.BOARD_DT,
           b.MEMBER_ID,
           b.BOARD_AUTH,
           m.MEMBER_NICK
    FROM BOARD b
    JOIN MEMBER m ON b.MEMBER_ID = m.MEMBER_ID
    ORDER BY b.BOARD_ID DESC
</select>

	<!-- 관리자 게시판 검색 -->
		<select id="searchAdminBoardList" resultMap="board_rm">
	   SELECT BOARD_ID,
	   BOARD_TITLE,
	   BOARD_CONTENT,
	   READ_CNT,
	   BOARD_AUTH,
	   BOARD_FILE1,
	   BOARD_FILE2,
	   BOARD_DT,
	   MEMBER_NICK
	FROM BOARD
	 WHERE
	
	<!-- 검색어가 있을 경우 -->
	<if test='query != null and query != ""'>
	    
	      <choose>
	         <when test='key == "tc"'>
	            (BOARD_TITLE LIKE '%' || #{query} || '%'
	            OR
	            BOARD_CONTENT LIKE '%' || #{query} || '%')
	         </when>
	         <when test='key == "w"'>
	            MEMBER_NICK LIKE '%' || #{query} || '%'
	         </when>
	      </choose>
	   </if>
	ORDER BY BOARD_ID DESC
	</select>

<!-- **************************** 관리자 게시물 끝 ************************************* -->


  	<update id = "deleteBoard" parameterType="map">
		UPDATE BOARD
		SET BOARD_ST = 'Y'
		WHERE BOARD_ID = #{boardId}
		AND BOARD_CD = #{boardCode}
	</update>
	
	<select id="searchAdminListCount" resultType="int">
   SELECT COUNT(*)
   FROM BOARD
   
   WHERE
   <!-- 검색어가 있을 경우 -->
   <if test='query != null and query != ""'>
     
      <choose>
         <when test='key == "tc"'>
            (BOARD_TITLE LIKE '%' || #{query} || '%'
            OR
            BOARD_CONTENT LIKE '%' || #{query} || '%')
         </when>
         <when test='key == "w"'>
            MEMBER_NICK LIKE '%' || #{query} || '%'
         </when>
      </choose>
   </if>
   ORDER BY BOARD_ID DESC
</select>
 <!--  
<insert id = "reportIt" parameterType = "report">

INSERT INTO REPORT
VALUES(SEQ_REPORT_NO.NEXTVAL, 
<if test = '#{reportTargetType} == "board"'>
#{reportTargetTitle},(SELECT BOARD_CONTENT FROM BOARD WHERE BOARD_ID = #{reportTarget})
</if>
<if test = '#{reportTargetType} == "reply"'>
NULL,#{reportTargetTitle}
</if>
,#{reportContent},#{reportTarget},#{reportSendId},#{reportSendNick},#{reportTargetType},
<if test = '#{reportTargetType} == "board"'>
#{reportTargetNick}
</if>
<if test = '#{reportTargetType} == "type"'>
(SELECT REPLY_CONTENT FROM REPLY WHERE REPLY_ID = #{reportTarget})
</if>
</insert>
 -->
  <insert id="reportIt" parameterType="report">
  INSERT INTO REPORT(REPORT_ID, REPORT_TARGET_TITLE, REPORT_TARGET_CONTENT,REPORT_CONTENT,REPORT_TARGET,REPORT_SEND_ID,REPORT_SEND_NICK,REPORT_TARGET_TYPE,REPORT_TARGET_NICK)
  VALUES(
    SEQ_REPORT_NO.NEXTVAL,
    <if test='reportTargetType == "board"'>
      #{reportTargetTitle}, (SELECT BOARD_CONTENT FROM BOARD WHERE BOARD_ID = #{reportTarget})
    </if>	
    <if test='reportTargetType == "reply"'>
      NULL, #{reportTargetContent}
    </if>,
    #{reportContent},
    #{reportTarget},
    #{reportSendId},
    #{reportSendNick},
    #{reportTargetType},
    #{reportTargetNick}
    )

</insert>






<!-- ****************************** 관리자 신고 mapper ***********************************-->

	<!-- 관리자 신고 페이지 페이지네이션 -->	
	<select id="getMemberReportListCount" resultType="int">
	   SELECT count(*) 
	   FROM REPORT 
	</select>
 
	<!-- 관리자 신고 화면 출력 -->
		
	<select id="selectMemberReport" resultMap="report_rm">
	   SELECT REPORT_ID,
	   REPORT_TARGET_TITLE,
	   REPORT_TARGET,
	   REPORT_STATUS,
	   REPORT_CONTENT,
	   REPORT_TARGET_CONTENT,
	   REPORT_TARGET_TYPE,
	   REPORT_SEND_NICK,
	   REPORT_TARGET_NICK
	FROM REPORT
	ORDER BY REPORT_ID DESC
	</select>
  
	<!-- 관리자 게시판 검색 -->
	<select id="searchMemberReport" resultMap="report_rm">
			   SELECT REPORT_ID,
			   REPORT_TARGET_TITLE,
			   REPORT_CONTENT,
			   REPORT_STATUS,
			   REPORT_TARGET,
			   REPORT_TARGET_CONTENT,
			   REPORT_TARGET_TYPE,
			   REPORT_SEND_NICK,
			   REPORT_TARGET_NICK
			FROM REPORT
			 WHERE
			
			<!-- 검색어가 있을 경우 -->
			<if test='query != null and query != ""'>
			    
			      <choose>
			     	 <when test='key == "w"'>
			            REPORT_ID LIKE '%${query}%'
			         </when>
			         <when test='key == "tc"'>
			            (REPORT_SEND_NICK LIKE '%' || #{query} || '%'
			            OR
			             REPORT_TARGET_NICK LIKE '%' || #{query} || '%')
			         </when>
			         
			      </choose>
			   </if>
			ORDER BY REPORT_ID DESC
	</select>
	
	<select id="searchMemberReportListCount" resultType="int">
	   SELECT COUNT(*)
	   FROM REPORT
	   
	   WHERE
	   <!-- 검색어가 있을 경우 -->
	<if test='query != null and query != ""'>
			    
			      <choose>
			     	 <when test='key == "w"'>
			            REPORT_ID LIKE '%${query}%'
			         </when>
			         <when test='key == "tc"'>
			            (REPORT_SEND_NICK LIKE '%' || #{query} || '%'
			            OR
			             REPORT_TARGET_NICK LIKE '%' || #{query} || '%')
			         </when>
			         
			      </choose>
			   </if>
			ORDER BY REPORT_ID DESC
	</select>
	

	<select id = "selectMemberGood" parameterType="detail" resultType="_int">
		SELECT COUNT(MEMBER_ID)
		FROM BOARDGOOD
		WHERE BOARD_CODE = #{boardCode}
		AND BOARD_ID = #{boardId}
		AND MEMBER_ID = #{memberId}
	</select>
	
	<insert id = "insertGood">
		INSERT
		INTO BOARDGOOD
		VALUES(SEQ_BOARDGOOD_NO.NEXTVAL,#{boardCode},#{boardId},#{memberId})
	</insert>
	<select id = "selectBoardGoodList" parameterType="_int" resultMap="boardGood_rm">
	SELECT *
	FROM BOARDGOOD
	WHERE BOARD_ID = #{boardId}
	</select>


	
	<!-- 관리자 신고 처리 완료 -->
	<update id="updateAdminMemberReport" parameterType="java.util.Map">
	  UPDATE REPORT
	  SET REPORT_STATUS = 'Y'
	  WHERE REPORT_ID IN
	  <foreach collection="reportChk" item="reportId" open="(" separator="," close=")">
	    ${reportId}
	  </foreach>
	</update>

	<delete id = "deleteGood" parameterType = "detail">
		DELETE FROM BOARDGOOD
		WHERE BOARD_ID = #{boardId}
		AND MEMBER_ID = #{memberId}
		AND BOARD_CODE = #{boardCode}
	</delete>
	<select id = "selectGoodList" resultType = "_int">
		SELECT COUNT(*)
		FROM BOARDGOOD
		WHERE BOARD_ID = #{boardId}
	</select>
	
	<update id= "updateBoardGood" parameterType="detail">
	UPDATE BOARD
	SET BOARD_GOOD = #{boardGood}
	WHERE BOARD_CD = #{boardCode}
	AND BOARD_ID = #{boardId}
	</update>
	
	<select id = "selectFollowList" resultMap = "follow_rm">
		SELECT *
		FROM FOLLOW
		WHERE WRITER_ID = (SELECT MEMBER_ID FROM BOARD WHERE BOARD_ID = #{boardId})
	</select>
	
	<select id = "selectBestList" resultMap = "board_rm">
		SELECT *
		FROM BOARD
		WHERE TO_CHAR(BOARD_DT, 'YYYYMMDD') = TO_CHAR(SYSDATE,'YYYYMMDD')
		AND ROWNUM &lt; 15
		ORDER BY BOARD_GOOD DESC, READ_CNT DESC
	</select>
		<update id = "updateReadCount">
		UPDATE BOARD
		SET READ_CNT = READ_CNT+1
		WHERE BOARD_ID = ${boardId}
	</update>
	
		<!-- 관리자 게시판 삭제 -->
		<delete id="deleteAdminBoard" parameterType="java.util.Map">
		DELETE FROM BOARD WHERE BOARD_ID IN
		  <foreach collection="boardChk" item="boardId" open="(" separator="," close=")">
	    ${boardId}
	  </foreach>
	</delete>
	
</mapper>

