<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">
 
    
	<resultMap type="member" id="member_rm">
	
		<id property="memberId" column="MEMBER_ID"/>
		
		<result property="memberEmail" 		column="MEMBER_EMAIL"/>
		<result property="memberPw" 		column="MEMBER_PW"/>
		<result property="memberName" 		column="MEMBER_NAME"/> 
		<result property="memberNick"	 	column="MEMBER_NICK"/>
		<result property="memberTel" 		column="MEMBER_TEL"/>
		<result property="memberAddr" 		column="MEMBER_ADDR"/>
		<result property="profileImage" 	column="PROFILE_IMG"/>
		<result property="memberEd" 		column="MEMBER_ED"/>
		<result property="secessionFl" 		column="SECESSION_FL"/>
		<result property="socialFl"         column="SOCIAL_FL"/>
		<result property="auth" 			column="AUTH"/>
	 	<result property ="memberIntro"		column="MEMBER_INTRO"/>
	 	<result property ="memberSns"      column="MEMBER_SNS" />
	 	<result property="emailOptIn"       column="EMAIL_OPTIN" />
	</resultMap>
  
   
   
   	<select id="login"  parameterType="member"  resultMap="member_rm"  >
 		SELECT MEMBER_ID, MEMBER_EMAIL, MEMBER_NICK , MEMBER_NAME ,MEMBER_TEL,
       		MEMBER_ADDR, PROFILE_IMG, 
    		TO_CHAR( MEMBER_ED, 'YYYY-MM-DD HH24:MI:SS') AS MEMBER_ED, MEMBER_PW,AUTH,MEMBER_SNS,EMAIL_OPTIN,MEMBER_INTRO,SOCIAL_FL,SECESSION_FL
		FROM MEMBER
		WHERE MEMBER_EMAIL = #{memberEmail} 
		AND SECESSION_FL = 'N' 
  	</select>
   
   
   
   
  	<select id="adminLogin"  parameterType="member"  resultMap="member_rm"  >
 		SELECT MEMBER_ID, MEMBER_EMAIL, MEMBER_NICK ,MEMBER_TEL,
       		MEMBER_ADDR, PROFILE_IMG, 
    		TO_CHAR( MEMBER_ED, 'YYYY-MM-DD HH24:MI:SS') AS MEMBER_ED, MEMBER_PW, AUTH
		FROM MEMBER
		WHERE MEMBER_EMAIL = #{memberEmail} 
		AND AUTH = '1'
		AND SECESSION_FL = 'N' 
  	</select>

		  
			<!-- ADMIN_TYPE 테이블을 사용하여 게시글 수 조회 -->
		<select id="getListCount" resultType="_int">
		  SELECT COUNT(*) FROM MEMBER
		  WHERE ADMIN_CD = (SELECT ADMIN_CD FROM ADMIN_TYPE WHERE ADMIN_CD = #{adminCode})
		</select>


  		<select id="selectMemberList" resultMap="member_rm">
		SELECT MEMBER_ID, MEMBER_EMAIL,
		MEMBER_NICK, MEMBER_TEL, MEMBER_NAME, MEMBER_ADDR, AUTH,
		SECESSION_FL, MEMBER_ED
	 
		 
		FROM MEMBER
	 	 
		ORDER BY MEMBER_ID DESC
	</select>
 
   <select id="searchMemberList" resultMap="member_rm">
    SELECT MEMBER_ID, MEMBER_EMAIL, MEMBER_TEL, MEMBER_ADDR, 
    MEMBER_NAME, MEMBER_NICK, SECESSION_FL,
    
    CASE WHEN SYSDATE - MEMBER_ED &lt; 1
    THEN TO_CHAR(MEMBER_ED, 'HH:MI')
    ELSE TO_CHAR(MEMBER_ED, 'YYYY-MM-DD')
    END MEMBER_ED
     
    FROM MEMBER
   
    WHERE
    <!-- 검색어가 있을 경우 -->
    <if test='query != null and query != ""'>
      
        <choose>
            <when test='key == "t"'> 
                MEMBER_EMAIL LIKE '%' || #{query} || '%'
            </when>
            
            <when test='key == "c"'>
                MEMBER_NICK LIKE '%' || #{query} || '%'
            </when>
            
            <when test='key == "w"'>
                AUTH LIKE '%' || ${query} || '%'
            </when>
        </choose>            
    </if> 
    ORDER BY MEMBER_ID DESC 
</select>    



<select id="searchListCount" resultType="int" parameterType="map">
    SELECT COUNT(*) 
    FROM MEMBER 
    
     WHERE
    <!-- 검색어가 있을 경우 -->
    <if test='query != null and query != ""'>
       
        <choose>
            <when test='key == "t"'> 
                MEMBER_EMAIL LIKE '%' || #{query} || '%'
            </when>
            
            <when test='key == "c"'>
                MEMBER_NICK LIKE '%' || #{query} || '%'
            </when>
            
            <when test='key == "w"'>
                AUTH LIKE '%' || ${query} || '%'
            </when>
        </choose>            
    </if>
</select>

	   
 
  	<!-- 이메일 중복 검사 -->
  	<select id="emailDupCheck" parameterType="string" resultType="_int">
  		SELECT COUNT(*) FROM MEMBER
		WHERE MEMBER_EMAIL = #{memberEmail}
		AND SECESSION_FL = 'N'
 
  </select>
  
  	<!-- 닉네임 중복 검사 -->
  	<select id="nicknameDupCheck" parameterType="string" resultType="_int">
  		SELECT COUNT(*) FROM MEMBER
		WHERE MEMBER_NICK = #{memberNick}
		AND SECESSION_FL = 'N'
  	</select>
  
  
<insert id="signUp" parameterType="member">
  INSERT INTO MEMBER (
    MEMBER_ID, MEMBER_EMAIL, MEMBER_PW, MEMBER_NICK, MEMBER_NAME, MEMBER_SNS,
    MEMBER_ADDR, MEMBER_TEL, AUTH, SECESSION_FL, MEMBER_ED
  ) VALUES (
    seq_member_no.nextval,
    #{memberEmail},
    #{memberPw},
    #{memberNick},
    #{memberName},
    #{memberSns},
    #{memberAddr},
    #{memberTel},
    0,
    'N',
    SYSDATE
  )
</insert>


  	<select id="adminMemberAll"  resultMap="member_rm"   >
 		SELECT MEMBER_ID, MEMBER_EMAIL, MEMBER_NICK, MEMBER_TEL, MEMBER_NAME, MEMBER_ADDR,
 		AUTH, SECESSION_FL, MEMBER_ED
  		FROM MEMBER
  		ORDER BY MEMBER_ID

  	</select>
  
  	<select id = "selectWriterCount" resultType = "_int">
  		SELECT COUNT(*)
  		FROM MEMBER
  		WHERE AUTH = 1
  	</select>
  	
  	<select id = "selectWriterList" resultMap = "member_rm">
  		SELECT MEMBER_ID, MEMBER_NICK, MEMBER_INTRO, PROFILE_IMG
  		FROM MEMBER
  	</select>
  	
  	
  	
  	<select id = "getWriter" resultMap = "member_rm">
  		SELECT MEMBER_ID,MEMBER_NICK, MEMBER_TEL, PROFILE_IMG, MEMBER_INTRO
  		FROM MEMBER
  		WHERE MEMBER_ID = #{memberId}
  	</select>
   <select id = "selectWriter" resultType="_int">
   		SELECT COUNT(*)
   		FROM MEMBER
   		WHERE MEMBER_ID = #{memberId}
   </select>
	 

</mapper>



